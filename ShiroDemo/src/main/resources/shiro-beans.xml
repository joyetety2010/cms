<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	 
	 <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"/>
	 
	 <!--注入自己的permission  -->
	 <bean id="urlPermissionResolver" class="com.hoo.shiro.permission.UrlPermissionResovler"/>
	 
	 <!--MD5 密码认证规则 -->
	 <bean id="hashMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
	 	<property name="hashAlgorithmName" value="md5"/>
	 </bean>
	 
	 <!--注入自己的realm -->
	 <bean id="userRealm" class="com.hoo.shiro.realm.UserRealm">
	 	<!--开启缓存 -->
	 	<property name="cachingEnabled" value="true"/>
	 	<property name="authenticationCachingEnabled" value="true"/>
	 	<!--认证缓存路径 -->
	 	<property name="authenticationCacheName" value="shiro-authenticationCache"/>
	 	<!--开启缓存 -->
	 	<property name="authorizationCachingEnabled" value="true"/>
	 	<!--授权缓存路径 -->
	 	<property name="authorizationCacheName" value="shiro-authorizationCache"/>
	 	
	 	<!--注入密码规则-->
	 	<property name="credentialsMatcher" ref="hashMatcher"/>
	 </bean>
	 
	 <!--注入securityManager-->
	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	  <!--注入自己的realm-->
	    <property name="realm" ref="userRealm"/>
	     <!--注入缓存-->
	    <property name="cacheManager" ref="cacheManager"/>
	    <!--注入自己的解释器-->
	    <property name="authorizer.permissionResolver" ref="urlPermissionResolver"/>
	</bean>
	
	<!--注入自己拦截器-->
	<bean id="resourceCheckFilter" class="com.hoo.shiro.filter.ResourceCheckFilter">
		<property name="errorUrl" value="/unauth.jsp"/>
	</bean>	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login"/>
	    <!-- override these for application-specific URLs if you like:
	    <property name="loginUrl" value="/login.jsp"/>
	    <property name="successUrl" value="/home.jsp"/>
	    <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
	    <!-- <property name="filters">
	        <util:map>
	            <entry key="anAlias" value-ref="someFilter"/>
	        </util:map>
	    </property> -->
	    
	    <!--设置拦截链-->
	    <property name="filterChainDefinitions">
	        <value>
	        	/admin/**=authc,resourceCheckFilter
				/login=anon
				/logout = logout
	        </value>
	    </property>
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>